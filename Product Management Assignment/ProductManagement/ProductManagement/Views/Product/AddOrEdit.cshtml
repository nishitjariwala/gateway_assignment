@model ProductManagement.Models.Product

@{
    ViewBag.Title = "AddOrEdit";
    if (Session["id"].ToString() != "0")
    {
        Session["Small_Image_path"] = Model.Small_Image_path;
        Session["Large_Image_path"] = Model.Lage_Image_path;

    }

}
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<h2>AddOrEdit</h2>

@using (Html.BeginForm("AddOrEdit", "Product", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Category, new SelectList(ViewBag.categories), "Select product category", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Quantity, new SelectList(ViewBag.quantity), "Select product Quantity", htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Short_Desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Short_Desc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Short_Desc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Long_Desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Long_Desc, new { htmlAttributes = new { @class = "form-control", @rows = "5", } })
                @Html.ValidationMessageFor(model => model.Long_Desc, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (!(Session["id"] != "0"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Small_Image_path, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Small_Image, htmlAttributes: new { @class = "form-control", @type = "file" })
                    @Html.ValidationMessageFor(model => model.Small_Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lage_Image_path, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Lage_Image, htmlAttributes: new { @class = "form-control", @type = "file" })
                    @Html.ValidationMessageFor(model => model.Lage_Image_path, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {

            <div class="form-group">
                @Html.LabelFor(model => model.Small_Image_path, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img src="@Url.Content(Model.Small_Image_path)" height="150" width="150" class="mb-3" />
                    @Html.TextBoxFor(model => model.Small_Image, htmlAttributes: new { @class = "form-control", @type = "file", @Value = Model.Small_Image_path })
                    @Html.ValidationMessageFor(model => model.Small_Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lage_Image_path, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img src="@Url.Content(Model.Lage_Image_path)" height="150" width="150" class="mb-3" />

                    @Html.TextBoxFor(model => model.Lage_Image, htmlAttributes: new { @class = "form-control", @type = "file", @Value = Model.Lage_Image_path })
                    @Html.ValidationMessageFor(model => model.Lage_Image_path, "", new { @class = "text-danger" })
                </div>
            </div>
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
